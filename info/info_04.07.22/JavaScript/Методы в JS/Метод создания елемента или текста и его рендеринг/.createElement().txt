Метод createElement позволяет создать новый элемент, передав в параметре имя тега. 
После создания с элементом можно работать как с обычным элементом, а также его можно добавить на страницу методами prepend, append, 
appendChild, insertBefore или insertAdjacentElement.

Если записать результат работы createElement в переменную, то в этой переменной будет такой элемент, 
как будто бы мы получили его через querySelector или getElementById.

Единственное отличие - наш элемент не будет размещен на странице. А так мы можем менять ему innerHTML, атрибуты, 
навешивать обработчики событий и в конце концов разместить его на странице.

1.
let elem = document.createElement('div')   ---- элемент создан, и он существует толко внутри JS !!!!!!!!!!!!!!! На странице его еще пока нет!

2.
для того чтобы как то застилизовать этот элемент применяется свойство classList() с методом .add:

elem.classList.add('class')  --- вот я к элементу добавляю заранее css правила по классу ( таже можно у удалить какой то класс remove())

3. 
----И чтобы разместить элемент на странице:

document.body.append(elem);

.append()-
Метод append позволяет вставить в конец какого-либо элемента другой элемент. 
Параметром метод принимает элемент, как правило созданный через createElement, либо строку. 
Можно добавить сразу несколько элементов или строк, перечислив их через запятую.

Тут я беру тег body, как родителя в в кенец его помещаю новосозданный div.

----Но если мне нужно вставыть вновьсозданный элемент в конкретное место на странице, то для ночала нужно получить родительский
элемент, куда буду вставлять:

document.querySelector('.wrapper').append(elem); -- вот получаю по селектору элемент, и вставялю элемент

но лучше конечно записать полученный элемент в переменную:

wrapper = querySelector('.wrapper');

и вставляю:

wrapper.append(elem);  --- втавит в конец элемента
wrapper.prepend(elem);  --- втавит в начало элемента

----Если нужно заменить один элемент на другой:

wrapper.replaceWith(button[1]);

