1. Изменение стилей элементов.

Любой элемент можно посмотреть в качестве объекта при помощи команды
console.dir(xxx);
там можно увидеть все свойста, методы, стили и тд.
Если открыть свойство style, то откроется еще один объект внутри объекта:
там я вижу инлайн стили (inline - когда стиль прописан не в отдельном файле/блоке, а непосредственно в коде.
то есть не
    <div class="center"></div>
    a
    <div style="text-align: center;"></div>)

Плюс к сказанному, Inline стиль имеет самый высокий приоритет, игнорируя CSS правила,
распространяющиеся на родителя и одноименные элементы/классы.     

Пример изменеия инлайн стиля элемента:

let elem = document.getElementById("box");  --- вот  получил элемент

elem.style.backgroundColor = 'yellow';  --- вот назначил стили (формат кмел кейс)
elem.style.width = '500px';  --- оазмеры назначаются толко в ""

<div class="box" id="box" style="background-color: yellow;"></div> ---вот в консоли получил инлайн стиль самый приоритетный 
                                                                      и перебивает CSS стили

вот еще пример                                                                      

let xxx = document.querySelectorAll('.heart');

xxx.forEach(item => {
    xxx[1].style.backgroundColor ='blue';  --- тут важно обращаться не к псевдомассиву, а к конкретному элементу
})


modalOverlay.style.display="block";      --- показео    
modal.style.display="block";             ---- скорыл
modalOverlay.style.display="none";          
modal.style.display="none";
modalOverlay.style.display="none"; 



Также существуе формат записы более удобный, если стилей нужно изменить много:

elem.style.cssText = 'background-color: blue; width: 500px'; - тут уже все как в css


2. 
Если нужно назначить стили не одному, элементу а всему псевдомассиву:

let xxx = document.querySelectorAll('.heart');

xxx.forEach(item => {
    item.style.backgroundColor ='blue';
})

3.
Управление встроенными стилями
Самый простой способ управления стилями CSS - это манипулирование атрибутом style отдельных элементов документа. 
Как и для большинства HTML-атрибутов, атрибуту style соответствует одноименное свойство объекта Element, и им можно 
манипулировать в сценариях на языке JavaScript. Однако свойство style имеет одну отличительную особенность: его значением 
является не строка, а объект CSSStyleDeclaration. Свойства этого объекта представляют CSS-свойства, определенные в HTML-атрибуте style.

Например, чтобы вывести содержимое текстового элемента e крупным, полужирным шрифтом синего цвета, можно выполнить следующие 
операции для записи желаемых значений в свойства, которые соответствуют свойствам стиля font-size, font-weight и color:

e.style.fontSize = "24px";
e.style.fontWeight = "bold";
e.style.color = "blue";
При работе со свойствами стиля объекта CSSStyleDeclaration не забывайте, что все значения должны задаваться в виде строк. 
В таблице стилей или атрибуте style можно написать:

position: absolute;
font-family: sans-serif;
background-color: #ffffff;
Чтобы сделать то же самое для элемента e в JavaScript, необходимо заключить все значения в кавычки:

e.style.position = "absolute";
e.style.fontFamily = "sans-serif";
e.style.backgroundColor = "#ffffff";
Обратите внимание, что точки с запятыми не входят в строковые значения. Это точки с запятой, 
употребляемые в синтаксисе языка JavaScript. Точки с запятой, используемые в таблицах стилей CSS, не нужны в строковых значениях, 
устанавливаемых с помощью JavaScript.

Кроме того, помните, что во всех свойствах позиционирования должны быть указаны единицы измерения. То есть:

e.style.left = 300; // Неправильно: это число, а не строка
e.style.left = "300"; // Неправильно: отсутствуют единицы измерения
e.style.left = "300px"; // Правильно

 
Единицы измерения обязательны при установке свойств стиля в JavaScript - так же, как при установке свойств стиля в таблицах стилей.

Многие CSS-свойства стиля, такие как font-size, содержат в своих именах дефис. В языке JavaScript 
дефис интерпретируется как знак минус, поэтому нельзя записать выражение, приведенное ниже:

e.style.font-size = "24px"; // Синтаксическая ошибка!
Таким образом, имена свойств объекта CSSStyleDeclaration слегка отличаются от имен реальных CSS-свойств. Если имя CSS-свойства 
содержит дефисы, имя свойства объекта CSSStyleDeclaration образуется путем удаления дефисов и перевода в верхний регистр буквы, 
непосредственно следующей за каждым из них. Другими словами, CSS-свойство border-left-width доступно через свойство borderLeftWidth, 
а к CSS-свойству font-family можно обратиться через свойство fontFamily.
