
1. 
Получаю элементы:

const result = document.querySelector('.calculating__result span');  -- блок куда будет выводится результат
         let truck_age, trucks_count, drivers_count, ratio;   -- объявил переменные участвующие в расчетах

2.
Разбиваю функцилгал калькулятора на несколько частей.
Для начала понадобится функция которая будет заниматься расчетом:

И первое с чего нужно начать, это проверку на заполнение всех полей. Ведь если юзер что то не ввел,
то не имеет смысла дальше рассчитывать

function calcTotal() {
    if (!truck_age || !trucks_count || !drivers_count || !ratio) { 
        result.textContent = 'Fill in all the fields!';
        return;  -- прерывает функцию и дальнейшие условия не выполняются.
    }
  
Если хотябы один из элементом в логическом контексте false, то все -функция прерывается. 
И в result запишится сообщение 'Fill in all the fields!' 


    if (truck_age === 'less_5') {  ---less_5  это значение я получу со страницы когда юзер отметит нужную кнопку
        result.textContent = Math.round(1 * ratio);
    } else {
        result.textContent = Math.round(0.8 * ratio);
    }
    Если авто до 5 лет тоисползую в формуле коэффициен 1, иначе ( тоесть более 5 лет) использую коэф. 0.8

3.
Теперь займусь получением данных от пользователя ( то что он введет и отметит)  
Для начала получу данные со статического контента. 
блок Track age

<div class="calculating__choose" id="gender">
    <div id="less_5" class="age calculating__choose-item calculating__choose-item_active">less 5 years</div>
    <div id="over_5" class="age calculating__choose-item">over 5 years</div>
</div>

3.1
Создам функцию для получения инфу с блока по возрасту авто:

function getAgeInformation() {
    const elements = document.querySelectorAll('.age');  --- получаю два дива по классу

    elements.forEach(elem => {  ----------- навешиваю на каждый из них обработчик на клик и использую объект события
        elem.addEventListener('click', (e) => {

            truck_age = e.target.getAttribute('id');  -- в перменную записываю значение атрибута id по объекту события е, 
                                                         те куда кликнул( произошло событие), то и записываю.

        Ниже функционал по активной кнопке:
            elements.forEach(elem =>   ----- перебераю дивы
                elem.classList.remove('calculating__choose-item_active');   --- на каждом елементе удаляю класс активности
                e.target.classList.add('calculating__choose-item_active');  --- а объекту события добавляю этот класс
            })
            
        });
    });
}
getAgeInformation();

3.2 
Аналогичная функция с активностью водителей:

<div class="calculating__choose calculating__choose_big">
    <div data-ratio="1.2" id="low" class="activity calculating__choose-item">Low<br>up to 7000 km/month</div>
    <div data-ratio="1.3" id="medium"  class="activity calculating__choose-item calculating__choose-item_active">Medium<br>8000-10000 km/month</div>
    <div data-ratio="1.4" id="high" class="activity calculating__choose-item">High<br>over 10000 km/month</div>
</div>

function getActivityInformation() {
        const elements = document.querySelectorAll('.activity'); --- получаю дивы по классу

        elements.forEach(elem => {   ----------- навешиваю на каждый из них обработчик на клик и использую объект события
            elem.addEventListener('click', (e) => {

                ratio = +e.target.getAttribute('data-ratio'); --- тут в переменную записываю значение дата-атрибута по событию от нажатой кнопки
                console.log(ratio);// 1.2 

                elements.forEach(elem => {   ----- перебераю дивы
                    elem.classList.remove('calculating__choose-item_active');  --- на каждом елементе удаляю класс активности
                    e.target.classList.add('calculating__choose-item_active');    --- а объекту события добавляю этот класс
                })

            });
        });
    }
    getActivityInformation();


3.3
    

