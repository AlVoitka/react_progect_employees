
----------------- Динамические классы ----------------

1.
Ниже пример формирования динамического класса:
Тоесть в зависимости от условия формируется класс для элемента.
В этом случае для добавления класса 'increase' 

const EmployeesListItem = (props) => {

    const {name, salary, onDelete, onToggleProp, increase, rise} = props;

    let classNames = "list-group-item d-flex justify-content-between";  -----1. Создал переменную с длинным классом.
    if (increase) {                    ---------2. Тут условие если в состоянии state increase = true, то 
        classNames += ' increase';    ------3. К класу добавится класс -increase' 
    }
    if (rise) {
        classNames += ' like';
    }

    return (
        <li className={classNames}>  -----------4. тут применяю переменную  и она имеет 2 состояния в -зависимости от условия (true/false)
            <span className="list-group-item-label" onClick={onToggleProp} data-toggle="rise" style={{fontSize: 30, color: 'blueviolet'}}>{name}</span>
            <input type="text" className="list-group-item-input" defaultValue={salary + '$'}/>
            <div className='d-flex justify-content-center align-items-center'>
                <button type="button"
                    className="btn-cookie btn-sm "
                    onClick={onToggleProp}
                    data-toggle="increase">
                    <i className="fas fa-cookie"></i>
                </button>

                <button type="button"
                        className="btn-trash btn-sm "
                        onClick={onDelete}>
                    <i className="fas fa-trash"></i>
                </button>
                <i className="fas fa-star"></i>
            </div>
        </li>
    )
}

export default EmployeesListItem;



-------------------- Динамические стили ----------------


Логика:
Если у кнопки есть свойство colored в позиции true, то она изменит цвет.

const AppFilter = (props) => {
    const buttonsData = [
        {name: 'all', label: 'Все сотрудники', colored: false},  ---------1. У кнопок есть свойства colored
        {name: 'rise', label: 'На повышение', colored: false},
        {name: 'moreThen1000', label: 'З/П больше 1000$', colored: true}
    ];

    const buttons = buttonsData.map(({name, label, colored}) => {   - ------2. Вытаскиваю это свойство
        const active = props.filter === name;
        const clazz = active ? 'btn-light' : 'btn-outline-light';
        return (
            <button type="button"
                    className={`btn ${clazz}`}
                    key={name}
                    onClick={() => props.onFilterSelect(name)}
                    style={colored ? {color: 'red'} : null }> ------ 3. Тут работою со стилем - передаю в него colored и использую тернарный оператор:
                    {label}                                  если true то применим стиль {color: 'red'}, а если false - null (ничего не возвращаем)     
            </button>
        )
    })

    return (
        <div className="btn-group">
            {buttons}
        </div>
    )
}

export default AppFilter;



Но правильно будет условие вынести в отдельную переменную:

const AppFilter = (props) => {
    const buttonsData = [
        {name: 'all', label: 'Все сотрудники', colored: false}, 
        {name: 'rise', label: 'На повышение', colored: false},
        {name: 'moreThen1000', label: 'З/П больше 1000$', colored: true}
    ];

    const buttons = buttonsData.map(({name, label, colored}) => {   
        const active = props.filter === name;
        const clazz = active ? 'btn-light' : 'btn-outline-light';
        const style = colored ? {color: 'red'} : null;  ------------ Вот вынес условие в переменную
        return (
            <button type="button"
                    className={`btn ${clazz}`}
                    key={name}
                    onClick={() => props.onFilterSelect(name)}
                    style={style}>    ------ вот передал переменную
                    {label}                                       
            </button>
        )
    })

    return (
        <div className="btn-group">
            {buttons}
        </div>
    )
}

export default AppFilter;
