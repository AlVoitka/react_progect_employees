https://webref.ru/css#pseudo-class

https://html5book.ru/psevdoklassy/#part1

Прменить псевдоэлементы к img не получится!!!!!!!!!!
Назначить на картинку псевдоэлемент нельзя, но как выход нужно просто картинку обернуть в div и уде диву 
назначать псевдоед=лемент.


.btn {
    width: 220px;
    height: 65px;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: #fff;
    font-size: 15px;
    font-weight: bold;
    border: 1px solid rgba(0, 0, 0, 0.2);
    box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.2);
    border-radius: 3px;
    cursor: pointer;
    transition: 0.3s all;   -----  своиство времени  изменения эффекта
    outline: none;
    &:hover {   ----- псевдоклас наведения мыши
        color:rgb(65, 90, 235);
        border: 1px solid rgb(238, 125, 125); 
        font-size: 16px;
    }
    &:active {  ----------------- меняет свойства при нажатии и удержании мышью на элемент и до момента пока отпустишь, 
        font-size: 19px;
    }
    &:focus{   ------------------ когда нажмешь на кнопку и потом перемещаешь мышь, а кнопка есе еще в фокусе ( tab - скидывает фокус)
        background:   
    }
    &:nth-child(2) {  ----- используется для добавления стиля к элементам на основе нумерации в дереве элементов.
        color: 
    }
    odd - Все нечётные номера элементов.
    even - Все чётные номера элементов.
    <число> - Порядковый номер дочернего элемента относительно своего родителя. Нумерация начинается с 1, это будет первый элемент в списке.
    <выражение> - Задаётся в виде an±b, где a и b — целые числа, а n — счётчик, который автоматически принимает значение 0, 1, 2...
}


/////////////////   Псевдоэлементы  ///////////////////////

Прменить псевдоэлементы к img не получится!!!!!!!!!!

Можно создавать простые геометрические формы а также использовать картинки.


:after
Псевдоэлемент, который используется для вывода контента после содержимого элемента, к которому он добавляется. 
Псевдоэлемент ::after работает совместно со свойством content.
По умолчанию ::after создаёт строчный элемент.

:before
Псевдоэлемент ::before применяется для отображения контента до содержимого элемента, к которому он добавляется. 
Работает совместно со свойством content.
По умолчанию ::before создаёт строчный элемент.

content: ''; - обязательное свойство. Без него не работает!!!!!!!! Это типо контент куда помещаются все остальные свойства

&__interactive-item {  ---- элемент
    position: relative;  --- родителю
    margin-top: 10px;
    &:hover {  ---- при наведении на элемент 
        &:after {    ---- появляется псевдоэлемент
            content: '';
            display: block; --- обязательно определить какой это елемент
            position: absolute;   --- элементу
            width: calc(70%);  -- его размеры
            height: 3px;   -- его размеры
            bottom: 8px;
            left: 3px;
            background-color: white;  -- когда элемент есть имее ширину и высоту можно насзначать цвет
            // background: url('./trash.png') center (center / cover) no-repeat;  -- либо можно назначить туда картинку
        }
    }
    }

Еще пример 

&__column {
    &-title {
        position: relative;
        padding-left: 35px;
        &:before {
            content: '';
            position: absolute;
            width: 15px;
            height: 15px;
            background: $main-color;
            border-radius: 100%;
            left: -7px;
            top: 50%;
            transform: translateY(-50%);
        }
    }


///////////////////////     Анимация    /////////////////////

&__drop { ------- 1.есть элемент
    width: 90px;
    font-weight: bold;
    font-size: 18px;
    color: rgba(227, 247, 52,0.8);
    transition: 0.5s all;  ----- 8. А благодоря этому млавное изменение цвета самого элемента
    &:after {  ------ 2.создаю псевдоэлемент полску
        content: '';
        position: absolute;
        display: block;
        width: 0%;  ------- 3. и скрываю ее изначально
        bottom: -5px;
        z-index: -1;
        height: 3px;
        background: $red;
        transition: 0.5s all;  ----7. Благодоря этому происходит визуализацяи выезжающей полосы
    }
    &:hover {   -------- 4. при наведении на элемент срабатывает ховер
        color: $red;   ---- 5. меняет цвет элемента
        &:after {   -------------  6. а также  из ширины 0 делает ширину 100%
            width: 100%;
        }



////////////// background-image: gradient  /////////////////

если задний фон не как цвет а как картинка или градиент, то просто так ховер не изменит цвет.
Ховер не перекроет background-image.
Нужно делать так:


background-image: linear-gradient(to right, rgb(176, 184, 230), rgb(113, 119, 155));
    &:hover {
        background-image: none; --- ибрал картинку
        background-color: red;  --- задал просто цвет

    }

