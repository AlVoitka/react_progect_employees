 Если в консоли разработки заданные на элемент правила перечеркнуты, скорее всего есть перебивающее правило по приоритету.

 Элемент HTML может быть целью нескольких правил CSS. Поскольку браузер может выбрать только одно правило и применить 
 его к этому элементу, то он должен решить, какое правило CSS имеет приоритет над другими.
  Это называется приоритетом в CSS (или специфичностью).

  Вычисление 100
Есть один быстрый способ выяснить, насколько правило CSS «сильное», путём вычисления специфичности селекторов:

идентификаторы стоят 100;
классы стоят 10;
селекторы тега стоят 1.
Селектор с наивысшим «счётом» будет преобладать, независимо от порядка, в котором появляются правила CSS.

Теперь давайте посчитаем веса на примере:

* {}                        /* =   0 */
li {}                       /* =   1 */
li::first-line {}           /* =   2 */
ul li {}                    /* =   2 */
ul ol + li {}               /* =   3 */
ul li.red {}                /* =  12 */
li.red.level {}             /* =  21 */
li:not(.red){}              /* =  11 */
li:not(.red):not(.green){}  /* =  11 */

#t34 {}                     /* = 100 */

#content #wrap {}           /* = 200 */


!!!!!!!!! Важно !!!!!!!!!!!!

Мои правила @media всегда имели малый приоритет и перебивались первоначальными правилами CSS. 
Медиа правила @media ( max-width:500px ){ } не участвуют в подсчете приоритета (веса).
Поэтому они всегда должны располагаться ниже всех остальных правил, чтобы перебивать предыдущие правила с таким же весом (приоритетом).
Тоесть в файле сборке style.scss  я должен импортировать (размещать) @import './media'; ниже всех остальных импортов!!!!!!!


А вот с variables и mixin все наоборот, их нужно импортировать паньше (выше) остальных блоков, у которых в коду учавствую переменные 
и мыксины. 