Основные подходы в адаптации:
1- сверстал секцию - заадаптируй ее
2- закоментить в hnml все секции, кроме той что верстаешь.

Проверить после адаптации можно тут - https://mob-vers.ru/audit/


1. Саздаю media.scss и подключаю его к style

1.1 !!!!!!!!! Важно !!!!!!!!!!!!
Мои правила @media всегда имели малый приоритет и перебивались первоначальными правилами CSS. 
Медиа правила @media ( max-width:500px ){ } не участвуют в подсчете приоритета (веса).
Поэтому они всегда должны располагаться ниже всех остальных правил, чтобы перебивать предыдущие правила с таким же весом (приоритетом).
Тоесть в файле сборке style.scss  я должен импортировать (размещать) @import './media'; ниже всех остальных импортов!!!!!!!




1.2 Ключевые точки по Bootstrap:

                    <576px	    ≥576px	    ≥768px     ≥992px     ≥1200px
                    Extra small  Small       Medium      Large     Extra large

Max container width	None (auto)	 540px	     720px      	960px	  1140px

https://mob-vers.ru/razmery-ekranov-dlya-adaptivnoj-verstki/  ---тут размеры и точки 

2. суть такова, что я создаю ключевые точки по ширине экрана и по достижению этих точек к элементам применяются новые правили которые
заданы в @media ( те они перебивают старые правила):

@media (max-width: 1600px) {
    #media_2 {
        display: flex;
        justify-content: center;
    }

    #media_1 {
        display: none;
    }

    .header__right-block {
        display: none;
    }
}

вот ян назначил точку @media (max-width: 1600px),  если экран у пользователя будет 1600px и менее, то применяться CSS правила из @media.
Нужным мне элементам я назначал id= тк у него самый большой приоритет по CSS (потому что в некоторых случая бруизер не хотел применять правила 
от @media - видимо у других был больший приоритет).

2.1
Самые частоустанавливаемые контрольные точки:

1
@media (max-width: 1200px) {  -- четкий промежуток от 992 до 1200 
    .container {
        max-width: 960px;  -- на этом промежутке конейнер будет адекватно отображаться
    }
}



2
@media (max-width: 992px) { -- четкий промежуток от 768 до 992  -- обычно планшетные экраны
    .container {
        max-width: 720px;   --- тут такой размер будет гуд
    }
}




3
@media (max-width: 768px) { -- четкий промежуток от 576 до 768  -- для планшетных версий
    .container {
        max-width: 540px;  --- тут так  
    }
}




4
@media (max-width: 576px) {  -- четкий промежуток от 320 до 576
    .container {
        width: 100%;  
        padding: 0 10px; --- ту обычно так
    }
}


Дла копирования:
@media (max-width: 1400px) {  -если есть боковая панель
    .sidepanel {
        display: none;
    }
}

@media (max-width: 1200px) {   /* от 992 до 1200 */ 
    .container {
        max-width: 960px;  
    }
}
@media (max-width: 992px) {  /* от 768 до 992  -- обычно планшетные экраны */
    .container {
        max-width: 720px;   
    }
}
@media (max-width: 768px) { /* от 576 до 768  -- для планшетных версий */
    .container {
        max-width: 540px;  
    }
}
@media (max-width: 576px) {   /* от 320 до 576  - мобилки */
    .container {
        width: 100%;  
        padding: 0 10px; 
    }
}
в стилях в самый низ чтобы не перебивало основные правила!!!!!



3. Для адаптации слайдера slick применяется свойство responsive в скрипте слайдера:

responsive: [

                {
                    breakpoint: 1200,
                    settings: {
                        slidesToShow: 3,
                        slidesToScroll: 2,
                        arrows: false
                    }
                },

                {
                    breakpoint: 992,
                    settings: {
                        slidesToShow: 2,
                        slidesToScroll: 1,
                        arrows: false
                    }
                },

                {
                    breakpoint: 768,
                    settings: {
                        slidesToShow: 1,
                        slidesToScroll: 1,
                        arrows: false
                    }
                },

            ]

4. Для расширенного тестирования адаптивности сайта можно установить Responsive Web Design Tester

https://chrome.google.com/webstore/detail/responsive-web-design-tes/enhcpefphhaiikpobimgcakinhabgiib

5. Хорошим тоном в разработке считается отключение hover эффектов на мобильных версиях. тк мышками там уже не 
пользуются, а при нажатии на кнопку срабатывает ховер а действие не производится.

Также на мобильных версиях нужно увеличивать облась ссылки за щет пэдингов чтобы пальцем удобнее было нажимать.