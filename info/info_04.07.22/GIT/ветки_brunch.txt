

 //////////////////     Ветки. Branch    ///////////////
Ветка создается как правило для отдельного человека при совместной разработке, и на своей ветке человек уже решает поставленные ему задачи. 
И все изменения и коммиты видит только он на сам
git branch xxx ( создаю новую ветку с названием xxx, но остаюсь  на мастере)
git checkout xxx ( перехожу на ветку ххх)
git checkout –b yyy ( так я и создал ветку yyy и перешел на нее)
git branch -a (показывает все существующие в проекте ветки и реальную позицию ) 
git branch  тоже показывает все существующие в проекте ветки и реальную позицию
git branch –v  (Чтобы посмотреть последний коммит на каждой из веток)
Опции --merged и --no-merged могут отфильтровать этот список для вывода только тех веток, которые слиты или ещё не слиты в текущую ветку. 
Чтобы посмотреть те ветки, которые вы уже слили с текущей, можете выполнить команду git branch --merged:
    $ git branch --merged
     iss53
    * master


Слияние веток
Для начала нужно перейти на мастер-ветку
git merge xxx ( объеденил ветку мастер и ххх. Веткак ххх сохраняется, но данные из нее сливаются с мастером и на мастере теперь все данные из ххх)
 Для удаления ветки выполните команду git branch с параметром -d: нахится нужно на мастер-ветке.
git branch -d xxx